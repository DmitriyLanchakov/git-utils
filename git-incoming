#!/bin/sh

CURRENT_BRANCH=$(git branch &>/dev/null; if [ $? -eq 0 ]; then echo "$(git branch | grep '^*' |sed s/\*\ //)"; fi)

if [ "${CURRENT_BRANCH}" != "" ]; then
  REMOTE_REPOSITORY="$(echo ${1} | cut -d"/" -f1 -s)"
  REMOTE_BRANCH="$(echo ${1} | cut -d"/" -f2 -s)"
  
  if [ "${REMOTE_REPOSITORY}" == "" ]; then
    REMOTE_REPOSITORY="${1}"
  fi
  
  # if no remote repository was specified, attempt to get it from the
  # "tracked" branch of this branch
  if [ "${REMOTE_REPOSITORY}" == "" ]; then
    TRACKING_REPOSITORY="$(git config branch.${CURRENT_BRANCH}.remote)"
    
    # there is a tracking repository
    if [ "${TRACKING_REPOSITORY}" != "" ]; then
      REMOTE_REPOSITORY="${TRACKING_REPOSITORY}"
      REMOTE_BRANCH="$(git config branch.${CURRENT_BRANCH}.merge | cut -d"/" -f3)"
    fi
  fi
  
  # if there is no tracking repository, default to origin
  if [ "${REMOTE_REPOSITORY}" == "" ]; then
    REMOTE_REPOSITORY="origin"
  fi

  if [ "${REMOTE_BRANCH}" == "" ]; then
    REMOTE_BRANCH="${CURRENT_BRANCH}"
  fi
  
  if [ "${SILENCE}" != "yes" ]; then
    echo "From: ${REMOTE_REPOSITORY}/${REMOTE_BRANCH}"
    echo ""
  fi
  
  #git remote update &>/dev/null
  git log ..${REMOTE_REPOSITORY}/${REMOTE_BRANCH} ${GIT_LOG_ARGUMENTS}
fi
